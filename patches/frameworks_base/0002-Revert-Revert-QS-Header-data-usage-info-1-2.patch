From b5f94d571ce9029e9ba5e150332bab1c24525285 Mon Sep 17 00:00:00 2001
From: Victor Bo <bvoid@yandex.ru>
Date: Wed, 15 Apr 2020 04:40:37 +0300
Subject: [PATCH 002/113] Revert "Revert "QS Header data usage info [1/2]""

This reverts commit 81882e0cc96272438eee4585e5b4b3cc24d2d553.
---
 core/java/android/provider/Settings.java      |  6 ++
 .../quick_status_bar_header_system_icons.xml  | 11 +++
 packages/SystemUI/res/values/cr_strings.xml   |  3 +
 .../statusbar/info/DataUsageView.java         | 86 +++++++++++++++++++
 .../systemui/statusbar/phone/StatusBar.java   | 10 +++
 5 files changed, 116 insertions(+)
 create mode 100644 packages/SystemUI/src/com/android/systemui/statusbar/info/DataUsageView.java

diff --git a/core/java/android/provider/Settings.java b/core/java/android/provider/Settings.java
index 3a0c06b9fba..b862cbe3343 100644
--- a/core/java/android/provider/Settings.java
+++ b/core/java/android/provider/Settings.java
@@ -5257,6 +5257,12 @@ public final class Settings {
          */
         public static final String RINGTONE_VIBRATION_PATTERN = "ringtone_vibration_pattern";
 
+        /**
+         * Show data usage in QS header
+         * @hide
+         */
+        public static final String QS_DATAUSAGE = "qs_datausage";
+
         /**
          * Screenrecord: enable mic
          * @hide
diff --git a/packages/SystemUI/res/layout/quick_status_bar_header_system_icons.xml b/packages/SystemUI/res/layout/quick_status_bar_header_system_icons.xml
index 66655c83ab3..f13cd550527 100644
--- a/packages/SystemUI/res/layout/quick_status_bar_header_system_icons.xml
+++ b/packages/SystemUI/res/layout/quick_status_bar_header_system_icons.xml
@@ -56,6 +56,17 @@
         android:layout_gravity="center_vertical|center_horizontal"
         android:visibility="gone" />
 
+    <com.android.systemui.statusbar.info.DataUsageView
+        android:id="@+id/data_sim_usage"
+        android:layout_width="wrap_content"
+        android:layout_height="match_parent"
+        android:gravity="center_vertical|end"
+        android:paddingStart="@dimen/status_bar_left_clock_starting_padding"
+        android:paddingEnd="@dimen/status_bar_left_clock_end_padding"
+        android:singleLine="true"
+        android:textAppearance="@style/TextAppearance.StatusBar.Clock"
+        android:text="" />
+
     <LinearLayout
         android:layout_width="0dp"
         android:layout_height="match_parent"
diff --git a/packages/SystemUI/res/values/cr_strings.xml b/packages/SystemUI/res/values/cr_strings.xml
index a761dba1863..9f62c760356 100644
--- a/packages/SystemUI/res/values/cr_strings.xml
+++ b/packages/SystemUI/res/values/cr_strings.xml
@@ -219,6 +219,9 @@
     <string name="stabilization_velocity_amplitude">Velocity Amplitude</string>
     <string name="stabilization_position_friction">Position Friction</string>
 
+    <!-- QS Header data usage info -->
+    <string name="usage_data">used</string>
+
     <!-- Screen recorder -->
     <string name="screenrecord_stopdot_label">Show stop dot</string>
     <string name="screenrecord_low_quality_label">Low quality</string>
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/info/DataUsageView.java b/packages/SystemUI/src/com/android/systemui/statusbar/info/DataUsageView.java
new file mode 100644
index 00000000000..909fb076c75
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/info/DataUsageView.java
@@ -0,0 +1,86 @@
+package com.android.systemui.statusbar.info;
+
+
+import android.content.Context;
+import android.graphics.Canvas;
+import android.graphics.Typeface;
+import android.util.AttributeSet;
+import android.os.AsyncTask;
+import android.telephony.SubscriptionManager;
+import android.text.BidiFormatter;
+import android.text.format.Formatter;
+import android.text.format.Formatter.BytesResult;
+import android.widget.TextView;
+import android.provider.Settings;
+import android.view.View;
+
+import com.android.systemui.Dependency;
+import com.android.systemui.R;
+import com.android.systemui.statusbar.policy.NetworkController;
+import com.android.systemui.statusbar.policy.NetworkController.SignalCallback;
+import com.android.settingslib.net.DataUsageController;
+
+public class DataUsageView extends TextView {
+
+    private Context mContext;
+    private NetworkController mNetworkController;
+    private static boolean shouldUpdateData;
+    private static boolean shouldUpdateDataTextView;
+    private String formatedinfo;
+
+    public DataUsageView(Context context, AttributeSet attrs) {
+        super(context, attrs);
+
+        mContext = context;
+        mNetworkController = Dependency.get(NetworkController.class);
+    }
+
+    protected void onDraw(Canvas canvas) {
+        super.onDraw(canvas);
+
+        if (!isDataUsageEnabled() && this.getText().toString() != "") {
+            setText("");
+        }
+        if (isDataUsageEnabled()) {
+            if(shouldUpdateData) {
+                shouldUpdateData = false;
+                AsyncTask.execute(new Runnable() {
+                    @Override
+                    public void run() {
+                        updateUsageData();
+                    }
+                });
+            }
+            if (shouldUpdateDataTextView) {
+                shouldUpdateDataTextView = false;
+                setText(formatedinfo);
+            }
+        }
+    }
+
+    private void updateUsageData() {
+        DataUsageController mobileDataController = new DataUsageController(mContext);
+        mobileDataController.setSubscriptionId(
+            SubscriptionManager.getDefaultDataSubscriptionId());
+        final DataUsageController.DataUsageInfo info = mobileDataController.getDataUsageInfo();
+        
+        formatedinfo = formatDataUsage(info.usageLevel) + " " + mContext.getResources().getString(R.string.usage_data);
+        shouldUpdateDataTextView = true;
+    }
+
+    private boolean isDataUsageEnabled() {
+        return Settings.System.getInt(mContext.getContentResolver(),
+                Settings.System.QS_DATAUSAGE, 0) != 0;
+    }
+
+    public static void updateUsage() {
+        shouldUpdateData = true;
+    }
+
+    private CharSequence formatDataUsage(long byteValue) {
+        final BytesResult res = Formatter.formatBytes(mContext.getResources(), byteValue,
+                Formatter.FLAG_IEC_UNITS);
+        return BidiFormatter.getInstance().unicodeWrap(mContext.getString(
+                com.android.internal.R.string.fileSizeSuffix, res.value, res.units));
+    }
+}
\ No newline at end of file
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBar.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBar.java
index c989e5a0af2..97c229cba6a 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBar.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBar.java
@@ -215,6 +215,7 @@ import com.android.systemui.statusbar.StatusBarState;
 import com.android.systemui.statusbar.SysuiStatusBarStateController;
 import com.android.systemui.statusbar.VibratorHelper;
 import com.android.systemui.statusbar.VisualizerView;
+import com.android.systemui.statusbar.info.DataUsageView;
 import com.android.systemui.statusbar.notification.ActivityLaunchAnimator;
 import com.android.systemui.statusbar.notification.BypassHeadsUpNotifier;
 import com.android.systemui.statusbar.notification.DynamicPrivacyController;
@@ -561,6 +562,8 @@ public class StatusBar extends SystemUI implements DemoMode,
         }
     };
 
+    private boolean dataupdated = false;
+
     public void resetTrackInfo() {
         if (mTicker != null) {
             mTicker.resetShownMediaMetadata();
@@ -1210,6 +1213,7 @@ public class StatusBar extends SystemUI implements DemoMode,
         ThreadedRenderer.overrideProperty("ambientRatio", String.valueOf(1.5f));
 
         mFlashlightController = Dependency.get(FlashlightController.class);
+
     }
 
     protected QS createDefaultQSFragment() {
@@ -5234,6 +5238,11 @@ public class StatusBar extends SystemUI implements DemoMode,
 
         int QSBlurAlpha = Math.round(255.0f * mNotificationPanel.getExpandedFraction());
 
+        if (QSBlurAlpha > 0 && !dataupdated && !mIsKeyguard) {
+            DataUsageView.updateUsage();
+            dataupdated = true;
+        }
+
         if (QSBlurAlpha > 0 && !mIsKeyguard) {
             if (!mQSBlurred) {
                 mQSBlurred = true;
@@ -5247,6 +5256,7 @@ public class StatusBar extends SystemUI implements DemoMode,
         } else if (QSBlurAlpha == 0 || mIsKeyguard) {
             mQSBlurView.setVisibility(View.GONE);
             mQSBlurred = false;
+            dataupdated = false;
         }
     }
 
-- 
2.17.1

